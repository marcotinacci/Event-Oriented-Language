/*
 * Event Oriented Language
 * Autogenerated code
 * Do not modify it
 */

#include "Event.h"

Event::Event() {
    _handlers = new queue<Handler*>();
}

Event::~Event() {
    delete _handlers;
}

void* Event::getState() const{
    return this->_state;
}

void Event::setState(void* args){
	this->_state = args;
}

void Event::attach(Handler* handler){
    _handlers->push(handler);
}

void Event::notify(){
	while(!_handlers->empty()){
        Handler *current = _handlers->front();
        _handlers->pop();
		current->update(this->getState());
		delete current;
	}
}
